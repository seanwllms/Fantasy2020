hitter_status <- hitter_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
group_by(position) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
modify_at(c("avg", "max"), round, 1)
hitter_status
#get open roster spots of each time
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df, roster_spot = position)}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 + OF4 + OF5 + OF6,
P = sum(P1:P10))
#get number and average positional value
hitter_status <- hitter_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
group_by(position) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
modify_at(c("avg", "max"), round, 1)
hitter_status
#get open roster spots of each time
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df, roster_spot = position)}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n())
View(big_team_df)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n())
big_team_df
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 + OF4 + OF5 + OF6,
P = sum(P1:P10))
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 + OF4 + OF5 + OF6,
P = sum(P1:P10))
big_team_df
View(big_team_df)
#get open roster spots of each time
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1)
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10)) %>%
select(-OF1:OF6, -P1:P10)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10)) %>%
select(-OF1:OF6, -P1:P10)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10))
big_team_df
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10)) %>%
select(-one_of(P1:P10))
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10)) %>%
select(-(P1:P10), -(OF1:OF6), -(C1:C2))
View(big_team_df)
#get number and average positional value
hitter_status <- hitter_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
group_by(position) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
modify_at(c("avg", "max"), round, 1)
hitter_status
#get open roster spots of each time
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10)) %>%
select(-(P1:P10), -(OF1:OF6), -(C1:C2)) %>%
gather(Position, Still_to_be_Drafted)
big_team_df
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1)
big_team_df
#get number and average positional value
hitter_status <- hitter_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
group_by(position) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
modify_at(c("avg", "max"), round, 1)
hitter_status
#get open roster spots of each time
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10)) %>%
select(-(P1:P9), -(OF1:OF6), -(C1:C2)) %>%
gather(Position, Still_to_be_Drafted)
big_team_df
#get number and average positional value
pitcher_status <- pitcher_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
mutate(position = "pitcher") %>%
modify_at(c("avg", "max"), round, 1)
pitcher_status
View(pitcher_status)
pitcher_status <- pitcher_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
mutate(position = "pitcher") %>%
modify_at(c("avg", "max"), round, 1) %>%
select(position, remaining, max, avg)
pitcher_status
library(tidyverse)
#load in coefficients file
if (!file.exists("coefs.rda")) {
source("historyanalysis.R")
}
#load hitter and pitcher projections
if (!file.exists("projections.rda")) {
source("calculatevalue.R")
} else{
load("projections.rda")
}
#Build league
source("leaguesetup.R")
#run draft
source("draftpicks.R")
#merge in projections
source("mergeinprojections.R")
#calculate standings
source("calculatestandings.R")
#write to .csv
source("csvwriter.R")
standings.output
pkdodgers
View(pkdodgers)
View(allrise)
View(dembums)
View(standings.output)
View(marmaduke)
library(tidyverse)
#load in coefficients file
if (!file.exists("coefs.rda")) {
source("historyanalysis.R")
}
#load hitter and pitcher projections
if (!file.exists("projections.rda")) {
source("calculatevalue.R")
} else{
load("projections.rda")
}
#Build league
source("leaguesetup.R")
#run draft
source("draftpicks.R")
#merge in projections
source("mergeinprojections.R")
#calculate standings
source("calculatestandings.R")
#write to .csv
source("csvwriter.R")
standings.output
View(pkdodgers)
bears
View(bears)
ottawa
View(ottawa)
View(balco)
View(ottawa)
View(filter(hitter_projections, position = "first_base", status !="drafted"))
View(filter(hitter_projections, position == "first_base", status !="drafted"))
View(filter(hitter_projections, position = "first_base" | position =="third_base", status !="drafted"))
View(filter(hitter_projections, position == "first_base" | position =="third_base", status !="drafted"))
View(filter(hitter_projections, position == "outfield", status !="drafted"))
#get number and average positional value for hitters
hitter_status <- hitter_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
group_by(position) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
modify_at(c("avg", "max"), round, 1)
#get number and average positional value for pitchers
pitcher_status <- pitcher_projections %>%
filter(status != "drafted",
dollar.value > 1) %>%
summarise(remaining = n(),
max = max(dollar.value),
avg = mean(dollar.value)) %>%
mutate(position = "pitcher") %>%
modify_at(c("avg", "max"), round, 1) %>%
select(position, remaining, max, avg)
kable(rbind(hitter_status, pitcher_status))
#get open roster spots of each time
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining)
View(big_team_df)
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = sum(OF1:OF6),
P = sum(P1:P10))
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 +OF4 + OF5 + OF6,
P = sum(P1:P10)) %>%
select(-(P1:P9), -(OF1:OF6), -(C1:C2))
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 +OF4 + OF5 + OF6,
P = P1+P2+P3+P4+P5+P6+P7+P8+P9+P10) %>%
select(-(P1:P9), -(OF1:OF6), -(C1:C2)) %>%
gather(Position, Still_to_be_Drafted)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 +OF4 + OF5 + OF6,
P = P1+P2+P3+P4+P5+P6+P7+P8+P9+P10) %>%
select(-(P1:P9), -(OF1:OF6), -(C1:C2)) %>%
gather(Position, Still_to_be_Drafted)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 +OF4 + OF5 + OF6,
P = P1+P2+P3+P4+P5+P6+P7+P8+P9+P10,
CI = 1B + 3B,
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 +OF4 + OF5 + OF6,
P = P1+P2+P3+P4+P5+P6+P7+P8+P9+P10
#     CI = 1B + 3B,
#    MI = 2B + SS,
#    UTIL = CI + MI + C + OF
) %>%
select(-(P1:P9), -(OF1:OF6), -(C1:C2)) %>%
gather(Position, Still_to_be_Drafted)
big_team_df <- data.frame()
all_positions <- marmaduke %>% pull(roster_spot)
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 +OF4 + OF5 + OF6,
P = P1+P2+P3+P4+P5+P6+P7+P8+P9+P10) %>%
mutate_(CI = "1B" + "3B")
for (team in teams) {big_team_df <- rbind(big_team_df, get(team))}
for (position in all_positions) {big_team_df <- add_row(big_team_df,
roster_spot = position,
Name = "")}
#calculate number of open roster spots at each position
big_team_df <- filter(big_team_df, Name=="") %>%
group_by(roster_spot) %>%
summarise(remaining = n()) %>%
spread(roster_spot, remaining) %>%
mutate_all(function(x) x-1) %>%
mutate(C = C1 + C2,
OF = OF1 + OF2 + OF3 +OF4 + OF5 + OF6,
P = P1+P2+P3+P4+P5+P6+P7+P8+P9+P10,
CI = 1B + 3B,
library(tidyverse)
#load in coefficients file
if (!file.exists("coefs.rda")) {
source("historyanalysis.R")
}
#load hitter and pitcher projections
if (!file.exists("projections.rda")) {
source("calculatevalue.R")
} else{
load("projections.rda")
}
#Build league
source("leaguesetup.R")
#run draft
source("draftpicks.R")
#merge in projections
source("mergeinprojections.R")
#calculate standings
source("calculatestandings.R")
#write to .csv
source("csvwriter.R")
standings.output
jobu
View(jobu)
View(ottawa)
View(ottawa)
