replacement_hitters$Position <- c("catcher",
"first_base",
"second_base",
"shortstop",
"third_base",
"middle_infield",
"corner_infield",
"outfield",
"dh"
)
names(replacement_hitters)[2:6] <- sapply(names(replacement_hitters[c(2:6)]), paste, ".repl", sep="")
#rename columns
names(replacement_hitters) <- c("position",
"runs",
"hr",
"rbi",
"sb",
"avg")
#make lists of file names
filelocs_steam <- sapply("./steamer/", paste, list.files("./steamer"), sep="")[c(1:6,8)]
filelocs_depth <- sapply("./depthcharts/", paste, list.files("./depthcharts"), sep="")[c(1:6,8)]
filelocs_fans <- sapply("./fans/", paste, list.files("./fans"), sep="")[c(1:6,8)]
#filelocs_zips <- sapply("./zips/", paste, list.files("./fans"), sep="")[c(1:6,8)]
#filelocs_atc <- sapply("./atc/", paste, list.files("./fans"), sep="")[c(1:6,8)]
files <- list(
fans=filelocs_fans,
depth=filelocs_depth,
steam=filelocs_steam
#zips=filelocs_zips,
#atc=filelocs_atc
)
#read in hitterdata
hitterdata <- at_depth(files, 2, read_csv) %>%
at_depth(2, select, 1, Team, AB, PA, R,HR, RBI, SB, AVG, OBP, playerid) %>%
at_depth(2, setNames, c("name", "Team", "AB", "PA", "R","HR", "RBI", "SB", "AVG", "OBP", "playerid")) %>%
at_depth(2, mutate,
HR_pa = HR/PA,
R_pa = R/PA,
RBI_pa = RBI/PA,
SB_pa = SB/PA,
playerid = as.character(playerid))
####################################
############   PECOTA   ############
####################################
#read in PECOTA data and rename variables to line up
library(readxl)
pecotahit<- read_xls("./pecota/pecotafeb2018.xls",
sheet = "Hitters") %>%
mutate(name = paste(FIRSTNAME, LASTNAME, sep=" ")) %>%
rename(Team = TEAM) %>%
select(name, BPID, Team, AB, PA, R,HR, RBI, SB, AVG, OBP)
#crosswalk PECOTA to BP
if (file.exists("./pecota/crosswalk.rda")) {
load("./pecota/crosswalk.rda")
} else {
crosswalk <- read_csv(url("http://crunchtimebaseball.com/master.csv")) %>%
rename(name = fg_name, playerid=fg_id, BPID = bp_id) %>%
select(name, playerid, BPID)
save(crosswalk, file="./pecota/crosswalk.rda")
}
pecotahit <- left_join(pecotahit, crosswalk) %>%
select(-BPID) %>%
mutate(HR_pa = HR/PA,
R_pa = R/PA,
RBI_pa = RBI/PA,
SB_pa = SB/PA,
playerid = as.character(playerid),
proj="pecota") %>%
filter(!is.na(playerid))
#create variable for each projection system
hitterdata$fans <- map(hitterdata$fans, mutate, proj="fans")
hitterdata$steam <- map(hitterdata$steam, mutate, proj="steamer")
hitterdata$depth <- map(hitterdata$depth, mutate, proj="depthcharts")
#hitterdata$zips <- map(hitterdata$depth, mutate, proj="zips")
#hitterdata$atc <- map(hitterdata$depth, mutate, proj="atc")
#create vector of positions.
positions <- c("first_base",
"second_base",
"third_base",
"catcher",
"dh",
"outfield",
"shortstop")
#loop through vector and average projections across each system
for (pos in 1:7) {
position_name <- positions[pos]
#merge all of the projection systems
raw_pos_data <- bind_rows(
hitterdata[[1]][[pos]],
hitterdata[[2]][[pos]],
hitterdata[[3]][[pos]],
pecotahit
#hitterdata[[4]][[pos]],
#hitterdata[[5]][[pos]]
) %>%
group_by(playerid) %>%
mutate(count = n()) %>%
filter(!(proj=="pecota" & count==1)) %>%
select(-count)
#grab the plate appearances for the depth charts projections
at_bats <- filter(raw_pos_data, proj=="depthcharts") %>%
mutate(depthpa = PA) %>%
select(playerid, depthpa)
#average across projection systems
temp <- group_by(raw_pos_data, playerid) %>%
summarise(AB = mean(AB),
PA = mean(PA),
R_ab = mean(R_pa),
HR_ab = mean(HR_pa),
RBI_ab = mean(RBI_pa),
SB_ab = mean(SB_pa),
AVG = mean(AVG),
OBP = mean(OBP)) %>%
#merge in the PA projections
left_join(at_bats) %>%
#use depth charts PA if available
mutate(PA = ifelse(is.na(depthpa), PA, depthpa)) %>%
#multiply rate based projections by PA
mutate(R = R_ab*PA,
HR = HR_ab*PA,
RBI = RBI_ab*PA,
SB = SB_ab*PA) %>%
select(playerid, PA, AB, R, HR, RBI, SB, AVG, OBP)
#join averaged data with all names in all 3 projection systems
results <- select(raw_pos_data, name, Team, playerid) %>% distinct %>%
left_join(temp)
replacement <- filter(replacement_hitters, position==position_name)
names(replacement)[2:6] <- sapply(names(replacement)[2:6], paste, ".repl", sep="")
results <- cbind(results, replacement)
#make name for position projection df
dfname <- paste(position_name, "_proj", sep="")
#save it
assign(dfname, results)
#remove temp variables
remove("temp", "raw_pos_data", "at_bats", "results", "dfname")
}
View(catcher_proj)
#loop through vector and average projections across each system
for (pos in 1:7) {
position_name <- positions[pos]
#merge all of the projection systems
raw_pos_data <- bind_rows(
hitterdata[[1]][[pos]],
hitterdata[[2]][[pos]],
hitterdata[[3]][[pos]],
pecotahit
#hitterdata[[4]][[pos]],
#hitterdata[[5]][[pos]]
) %>%
group_by(playerid) %>%
mutate(count = n()) %>%
ungroup()
filter(!(proj=="pecota" & count==1)) %>%
select(-count)
#grab the plate appearances for the depth charts projections
at_bats <- filter(raw_pos_data, proj=="depthcharts") %>%
mutate(depthpa = PA) %>%
select(playerid, depthpa)
#average across projection systems
temp <- group_by(raw_pos_data, playerid) %>%
summarise(AB = mean(AB),
PA = mean(PA),
R_ab = mean(R_pa),
HR_ab = mean(HR_pa),
RBI_ab = mean(RBI_pa),
SB_ab = mean(SB_pa),
AVG = mean(AVG),
OBP = mean(OBP)) %>%
#merge in the PA projections
left_join(at_bats) %>%
#use depth charts PA if available
mutate(PA = ifelse(is.na(depthpa), PA, depthpa)) %>%
#multiply rate based projections by PA
mutate(R = R_ab*PA,
HR = HR_ab*PA,
RBI = RBI_ab*PA,
SB = SB_ab*PA) %>%
select(playerid, PA, AB, R, HR, RBI, SB, AVG, OBP)
#join averaged data with all names in all 3 projection systems
results <- select(raw_pos_data, name, Team, playerid) %>% distinct %>%
left_join(temp)
replacement <- filter(replacement_hitters, position==position_name)
names(replacement)[2:6] <- sapply(names(replacement)[2:6], paste, ".repl", sep="")
results <- cbind(results, replacement)
#make name for position projection df
dfname <- paste(position_name, "_proj", sep="")
#save it
assign(dfname, results)
#remove temp variables
remove("temp", "raw_pos_data", "at_bats", "results", "dfname")
}
library(dplyr)
library(purrr)
library(readr)
###Load the coefficients data frame
load("coefs.rda")
###############################################################
################HITTER STUFF LIVES HERE#########################
################################################################
#Import and clean data on replacement levels
#read in league wide csv
replacement_hitters <- read.csv("replacement_hitters.csv", stringsAsFactors = FALSE)
replacement_hitters$Position <- c("catcher",
"first_base",
"second_base",
"shortstop",
"third_base",
"middle_infield",
"corner_infield",
"outfield",
"dh"
)
names(replacement_hitters)[2:6] <- sapply(names(replacement_hitters[c(2:6)]), paste, ".repl", sep="")
#rename columns
names(replacement_hitters) <- c("position",
"runs",
"hr",
"rbi",
"sb",
"avg")
#make lists of file names
filelocs_steam <- sapply("./steamer/", paste, list.files("./steamer"), sep="")[c(1:6,8)]
filelocs_depth <- sapply("./depthcharts/", paste, list.files("./depthcharts"), sep="")[c(1:6,8)]
filelocs_fans <- sapply("./fans/", paste, list.files("./fans"), sep="")[c(1:6,8)]
#filelocs_zips <- sapply("./zips/", paste, list.files("./fans"), sep="")[c(1:6,8)]
#filelocs_atc <- sapply("./atc/", paste, list.files("./fans"), sep="")[c(1:6,8)]
files <- list(
fans=filelocs_fans,
depth=filelocs_depth,
steam=filelocs_steam
#zips=filelocs_zips,
#atc=filelocs_atc
)
#read in hitterdata
hitterdata <- at_depth(files, 2, read_csv) %>%
at_depth(2, select, 1, Team, AB, PA, R,HR, RBI, SB, AVG, OBP, playerid) %>%
at_depth(2, setNames, c("name", "Team", "AB", "PA", "R","HR", "RBI", "SB", "AVG", "OBP", "playerid")) %>%
at_depth(2, mutate,
HR_pa = HR/PA,
R_pa = R/PA,
RBI_pa = RBI/PA,
SB_pa = SB/PA,
playerid = as.character(playerid))
####################################
############   PECOTA   ############
####################################
#read in PECOTA data and rename variables to line up
library(readxl)
pecotahit<- read_xls("./pecota/pecotafeb2018.xls",
sheet = "Hitters") %>%
mutate(name = paste(FIRSTNAME, LASTNAME, sep=" ")) %>%
rename(Team = TEAM) %>%
select(name, BPID, Team, AB, PA, R,HR, RBI, SB, AVG, OBP)
#crosswalk PECOTA to BP
if (file.exists("./pecota/crosswalk.rda")) {
load("./pecota/crosswalk.rda")
} else {
crosswalk <- read_csv(url("http://crunchtimebaseball.com/master.csv")) %>%
rename(name = fg_name, playerid=fg_id, BPID = bp_id) %>%
select(name, playerid, BPID)
save(crosswalk, file="./pecota/crosswalk.rda")
}
pecotahit <- left_join(pecotahit, crosswalk) %>%
select(-BPID) %>%
mutate(HR_pa = HR/PA,
R_pa = R/PA,
RBI_pa = RBI/PA,
SB_pa = SB/PA,
playerid = as.character(playerid),
proj="pecota") %>%
filter(!is.na(playerid))
#create variable for each projection system
hitterdata$fans <- map(hitterdata$fans, mutate, proj="fans")
hitterdata$steam <- map(hitterdata$steam, mutate, proj="steamer")
hitterdata$depth <- map(hitterdata$depth, mutate, proj="depthcharts")
#hitterdata$zips <- map(hitterdata$depth, mutate, proj="zips")
#hitterdata$atc <- map(hitterdata$depth, mutate, proj="atc")
#create vector of positions.
positions <- c("first_base",
"second_base",
"third_base",
"catcher",
"dh",
"outfield",
"shortstop")
#loop through vector and average projections across each system
for (pos in 1:7) {
position_name <- positions[pos]
#merge all of the projection systems
raw_pos_data <- bind_rows(
hitterdata[[1]][[pos]],
hitterdata[[2]][[pos]],
hitterdata[[3]][[pos]],
pecotahit
#hitterdata[[4]][[pos]],
#hitterdata[[5]][[pos]]
) %>%
group_by(playerid) %>%
mutate(count = n()) %>%
ungroup()
filter(!(proj=="pecota" & count==1)) %>%
select(-count)
#grab the plate appearances for the depth charts projections
at_bats <- filter(raw_pos_data, proj=="depthcharts") %>%
mutate(depthpa = PA) %>%
select(playerid, depthpa)
#average across projection systems
temp <- group_by(raw_pos_data, playerid) %>%
summarise(AB = mean(AB),
PA = mean(PA),
R_ab = mean(R_pa),
HR_ab = mean(HR_pa),
RBI_ab = mean(RBI_pa),
SB_ab = mean(SB_pa),
AVG = mean(AVG),
OBP = mean(OBP)) %>%
#merge in the PA projections
left_join(at_bats) %>%
#use depth charts PA if available
mutate(PA = ifelse(is.na(depthpa), PA, depthpa)) %>%
#multiply rate based projections by PA
mutate(R = R_ab*PA,
HR = HR_ab*PA,
RBI = RBI_ab*PA,
SB = SB_ab*PA) %>%
select(playerid, PA, AB, R, HR, RBI, SB, AVG, OBP)
#join averaged data with all names in all 3 projection systems
results <- select(raw_pos_data, name, Team, playerid) %>% distinct %>%
left_join(temp)
replacement <- filter(replacement_hitters, position==position_name)
names(replacement)[2:6] <- sapply(names(replacement)[2:6], paste, ".repl", sep="")
results <- cbind(results, replacement)
#make name for position projection df
dfname <- paste(position_name, "_proj", sep="")
#save it
assign(dfname, results)
#remove temp variables
remove("temp", "raw_pos_data", "at_bats", "results", "dfname")
}
library(tidyverse)
###Load the coefficients data frame
load("coefs.rda")
###############################################################
################HITTER STUFF LIVES HERE#########################
################################################################
#Import and clean data on replacement levels
#read in league wide csv
replacement_hitters <- read.csv("replacement_hitters.csv", stringsAsFactors = FALSE)
replacement_hitters$Position <- c("catcher",
"first_base",
"second_base",
"shortstop",
"third_base",
"middle_infield",
"corner_infield",
"outfield",
"dh"
)
names(replacement_hitters)[2:6] <- sapply(names(replacement_hitters[c(2:6)]), paste, ".repl", sep="")
#rename columns
names(replacement_hitters) <- c("position",
"runs",
"hr",
"rbi",
"sb",
"avg")
#make lists of file names
filelocs_steam <- sapply("./steamer/", paste, list.files("./steamer"), sep="")[c(1:6,8)]
filelocs_depth <- sapply("./depthcharts/", paste, list.files("./depthcharts"), sep="")[c(1:6,8)]
filelocs_fans <- sapply("./fans/", paste, list.files("./fans"), sep="")[c(1:6,8)]
#filelocs_zips <- sapply("./zips/", paste, list.files("./fans"), sep="")[c(1:6,8)]
#filelocs_atc <- sapply("./atc/", paste, list.files("./fans"), sep="")[c(1:6,8)]
files <- list(
fans=filelocs_fans,
depth=filelocs_depth,
steam=filelocs_steam
#zips=filelocs_zips,
#atc=filelocs_atc
)
#read in hitterdata
hitterdata <- at_depth(files, 2, read_csv) %>%
at_depth(2, select, 1, Team, AB, PA, R,HR, RBI, SB, AVG, OBP, playerid) %>%
at_depth(2, setNames, c("name", "Team", "AB", "PA", "R","HR", "RBI", "SB", "AVG", "OBP", "playerid")) %>%
at_depth(2, mutate,
HR_pa = HR/PA,
R_pa = R/PA,
RBI_pa = RBI/PA,
SB_pa = SB/PA,
playerid = as.character(playerid))
####################################
############   PECOTA   ############
####################################
#read in PECOTA data and rename variables to line up
#library(readxl)
pecotahit<- read_xls("./pecota/pecotafeb2018.xls",
sheet = "Hitters") %>%
mutate(name = paste(FIRSTNAME, LASTNAME, sep=" ")) %>%
rename(Team = TEAM) %>%
select(name, BPID, Team, AB, PA, R,HR, RBI, SB, AVG, OBP)
#crosswalk PECOTA to BP
if (file.exists("./pecota/crosswalk.rda")) {
load("./pecota/crosswalk.rda")
} else {
crosswalk <- read_csv(url("http://crunchtimebaseball.com/master.csv")) %>%
rename(name = fg_name, playerid=fg_id, BPID = bp_id) %>%
select(name, playerid, BPID)
save(crosswalk, file="./pecota/crosswalk.rda")
}
pecotahit <- left_join(pecotahit, crosswalk) %>%
select(-BPID) %>%
mutate(HR_pa = HR/PA,
R_pa = R/PA,
RBI_pa = RBI/PA,
SB_pa = SB/PA,
playerid = as.character(playerid),
proj="pecota") %>%
filter(!is.na(playerid))
#create variable for each projection system
hitterdata$fans <- map(hitterdata$fans, mutate, proj="fans")
hitterdata$steam <- map(hitterdata$steam, mutate, proj="steamer")
hitterdata$depth <- map(hitterdata$depth, mutate, proj="depthcharts")
#hitterdata$zips <- map(hitterdata$depth, mutate, proj="zips")
#hitterdata$atc <- map(hitterdata$depth, mutate, proj="atc")
#create vector of positions.
positions <- c("first_base",
"second_base",
"third_base",
"catcher",
"dh",
"outfield",
"shortstop")
#loop through vector and average projections across each system
for (pos in 1:7) {
position_name <- positions[pos]
#merge all of the projection systems
raw_pos_data <- bind_rows(
hitterdata[[1]][[pos]],
hitterdata[[2]][[pos]],
hitterdata[[3]][[pos]],
pecotahit
#hitterdata[[4]][[pos]],
#hitterdata[[5]][[pos]]
) %>%
group_by(playerid) %>%
mutate(count = n()) %>%
ungroup()
filter(!(proj=="pecota" & count==1)) %>%
select(-count)
#grab the plate appearances for the depth charts projections
at_bats <- filter(raw_pos_data, proj=="depthcharts") %>%
mutate(depthpa = PA) %>%
select(playerid, depthpa)
#average across projection systems
temp <- group_by(raw_pos_data, playerid) %>%
summarise(AB = mean(AB),
PA = mean(PA),
R_ab = mean(R_pa),
HR_ab = mean(HR_pa),
RBI_ab = mean(RBI_pa),
SB_ab = mean(SB_pa),
AVG = mean(AVG),
OBP = mean(OBP)) %>%
#merge in the PA projections
left_join(at_bats) %>%
#use depth charts PA if available
mutate(PA = ifelse(is.na(depthpa), PA, depthpa)) %>%
#multiply rate based projections by PA
mutate(R = R_ab*PA,
HR = HR_ab*PA,
RBI = RBI_ab*PA,
SB = SB_ab*PA) %>%
select(playerid, PA, AB, R, HR, RBI, SB, AVG, OBP)
#join averaged data with all names in all 3 projection systems
results <- select(raw_pos_data, name, Team, playerid) %>% distinct %>%
left_join(temp)
replacement <- filter(replacement_hitters, position==position_name)
names(replacement)[2:6] <- sapply(names(replacement)[2:6], paste, ".repl", sep="")
results <- cbind(results, replacement)
#make name for position projection df
dfname <- paste(position_name, "_proj", sep="")
#save it
assign(dfname, results)
#remove temp variables
remove("temp", "raw_pos_data", "at_bats", "results", "dfname")
}
############   PECOTA   ############
####################################
#read in PECOTA data and rename variables to line up
#library(readxl)
pecotahit<- read_xls("./pecota/pecotafeb2018.xls",
sheet = "Hitters") %>%
mutate(name = paste(FIRSTNAME, LASTNAME, sep=" ")) %>%
rename(Team = TEAM) %>%
select(name, BPID, Team, AB, PA, R,HR, RBI, SB, AVG, OBP)
#crosswalk PECOTA to BP
if (file.exists("./pecota/crosswalk.rda")) {
load("./pecota/crosswalk.rda")
} else {
crosswalk <- read_csv(url("http://crunchtimebaseball.com/master.csv")) %>%
rename(name = fg_name, playerid=fg_id, BPID = bp_id) %>%
select(name, playerid, BPID)
save(crosswalk, file="./pecota/crosswalk.rda")
}
pecotahit <- left_join(pecotahit, crosswalk) %>%
select(-BPID) %>%
mutate(HR_pa = HR/PA,
R_pa = R/PA,
RBI_pa = RBI/PA,
SB_pa = SB/PA,
playerid = as.character(playerid),
proj="pecota") %>%
filter(!is.na(playerid))
