load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
#########################
##### HITTERS  HERE #####
#########################
hitters2019 <- read_csv("./old_draft_analysis/hitters.csv") %>%
select(Name, PA, R, HR, RBI, SB, AVG)
#merge in 2019 results for each pick, merge in replacment levels.
hitter_results <- left_join(draft, hitters2019, by =c("player" ="Name")) %>%
left_join(replacement_hitters, by = c("position" = "Position")) %>%
filter(!(player %in% pitchers2019$Name)) %>%
mutate(
mrg_r = R - R_repl,
mrg_hr = HR - HR_repl,
mrg_rbi = RBI - RBI_repl,
mrg_sb = SB - SB_repl,
mrg_avg = AVG - AVG_repl,
marginal_points = mrg_r * coefs$estimate[5] +
mrg_hr * coefs$estimate[3] +
mrg_sb * coefs$estimate[7] +
mrg_rbi * coefs$estimate[6] +
mrg_avg * coefs$estimate[1]/15,
dollar_value = marginal_points*4680/1700 + 2,
equity = dollar_value - salary
)
hitter_value_targets <- hitter_results %>%
filter(!kept) %>%
group_by(salary) %>%
summarise(mean_equity = mean(equity, na.rm = TRUE),
equity_sd = sd(equity,  na.rm = TRUE))
hitter_value_graph <- hitter_results %>%
filter(!kept) %>%
ggplot(aes(x=factor(salary), y = equity)) +
geom_boxplot()
hitter_value_graph
library(tidyverse)
library(xlsx)
library(lubridate)
#Load coefficients for marginal stats, as well as replacement values
load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
library(xlsx)
install.packages("rjava")
install.packages("rJava")
library(tidyverse)
library(xlsx)
library(lubridate)
#Load coefficients for marginal stats, as well as replacement values
load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
#Load coefficients for marginal stats, as well as replacement values
load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- xlsx::read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
library(tidyverse)
library(xlsx)
library(lubridate)
#Load coefficients for marginal stats, as well as replacement values
load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
#########################
##### HITTERS  HERE #####
#########################
hitters2019 <- read_csv("./old_draft_analysis/hitters.csv") %>%
select(Name, PA, R, HR, RBI, SB, AVG)
#merge in 2019 results for each pick, merge in replacment levels.
hitter_results <- left_join(draft, hitters2019, by =c("player" ="Name")) %>%
left_join(replacement_hitters, by = c("position" = "Position")) %>%
filter(!(player %in% pitchers2019$Name)) %>%
mutate(
mrg_r = R - R_repl,
mrg_hr = HR - HR_repl,
mrg_rbi = RBI - RBI_repl,
mrg_sb = SB - SB_repl,
mrg_avg = AVG - AVG_repl,
marginal_points = mrg_r * coefs$estimate[5] +
mrg_hr * coefs$estimate[3] +
mrg_sb * coefs$estimate[7] +
mrg_rbi * coefs$estimate[6] +
mrg_avg * coefs$estimate[1]/15,
dollar_value = marginal_points*4680/1700 + 2,
equity = dollar_value - salary
)
hitter_value_targets <- hitter_results %>%
filter(!kept) %>%
group_by(salary) %>%
summarise(mean_equity = mean(equity, na.rm = TRUE),
equity_sd = sd(equity,  na.rm = TRUE))
hitter_value_graph <- hitter_results %>%
filter(!kept) %>%
ggplot(aes(x=factor(salary), y = equity)) +
geom_boxplot()
hitter_value_graph
#########################
##### PITCHERS HERE #####
#########################
pitchers2019 <- read_csv("./old_draft_analysis/pitchers.csv") %>%
mutate(WHIP = (H+BB)/IP) %>%
select(Name, IP, W, SV, SO, ERA, WHIP)
replacement_pitchers <- readxl::read_xlsx("./replacement/replacement_pitchers.xlsx",
sheet="replacement") %>%
select(-IP) %>%
mutate(Position = "P") %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
#merge in 2019 results for each pick, merge in replacment levels.
pitcher_results <- left_join(draft, pitchers2019, by =c("player" ="Name")) %>%
left_join(replacement_pitchers, by = c("position" = "Position")) %>%
filter(player %in% pitchers2019$Name) %>%
mutate(
mrg_era = ERA - ERA_repl,
mrg_whip = WHIP - WHIP_repl,
mrg_k = SO - K_repl,
mrg_w = W - W_repl,
mrg_sv = SV - SV_repl,
marginal_points = mrg_era * coefs$estimate[2]*(IP/1464) +
mrg_whip * coefs$estimate[10]*(IP/1464) +
mrg_k * coefs$estimate[4] +
mrg_w * coefs$estimate[9] +
mrg_sv * coefs$estimate[8],
dollar_value = marginal_points*4680/1700 + 3,
equity = dollar_value - salary
)
pitcher_value_targets <- pitcher_results %>%
filter(!kept) %>%
group_by(salary) %>%
summarise(mean_equity = mean(equity, na.rm = TRUE),
equity_sd = sd(equity,  na.rm = TRUE))
pitcher_value_graph <- pitcher_results %>%
filter(!kept) %>%
ggplot(aes(x=factor(salary), y = equity)) +
geom_boxplot()
pitcher_value_graph
scatterplot_hit <- ggplot(hitter_results, aes(x=salary,y=equity)) +
geom_point() +
geom_smooth()
scatterplot_hit
scatterplot_pitch <- ggplot(pitcher_results, aes(x=salary,y=equity)) +
geom_point() +
geom_smooth()
scatterplot_pitch
library(tidyverse)
library(xlsx)
library(lubridate)
#Load coefficients for marginal stats, as well as replacement values
load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
install.packages("readxl")
install.packages("readxl")
library(tidyverse)
#library(xlsx)
library(lubridate)
#Load coefficients for marginal stats, as well as replacement values
load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- readxl::read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
library(tidyverse)
#library(xlsx)
library(lubridate)
#Load coefficients for marginal stats, as well as replacement values
load("coefs.rda")
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx", sheet = "replacement_hitters") %>%
mutate(Position = case_when(
Position == "UTIL" ~ "DH",
TRUE ~ toupper(Position))) %>%
rename(R = Runs) %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
draft <- readxl::read_xlsx("./old_draft_analysis/draftpicks.xlsx") %>%
mutate(drafted = ymd(drafted),
kept = ifelse(drafted < mdy("1/1/2019"), TRUE, FALSE))
#########################
##### HITTERS  HERE #####
#########################
hitters2019 <- read_csv("./old_draft_analysis/hitters.csv") %>%
select(Name, PA, R, HR, RBI, SB, AVG)
#merge in 2019 results for each pick, merge in replacment levels.
hitter_results <- left_join(draft, hitters2019, by =c("player" ="Name")) %>%
left_join(replacement_hitters, by = c("position" = "Position")) %>%
filter(!(player %in% pitchers2019$Name)) %>%
mutate(
mrg_r = R - R_repl,
mrg_hr = HR - HR_repl,
mrg_rbi = RBI - RBI_repl,
mrg_sb = SB - SB_repl,
mrg_avg = AVG - AVG_repl,
marginal_points = mrg_r * coefs$estimate[5] +
mrg_hr * coefs$estimate[3] +
mrg_sb * coefs$estimate[7] +
mrg_rbi * coefs$estimate[6] +
mrg_avg * coefs$estimate[1]/15,
dollar_value = marginal_points*4680/1700 + 2,
equity = dollar_value - salary
)
hitter_value_targets <- hitter_results %>%
filter(!kept) %>%
group_by(salary) %>%
summarise(mean_equity = mean(equity, na.rm = TRUE),
equity_sd = sd(equity,  na.rm = TRUE))
hitter_value_graph <- hitter_results %>%
filter(!kept) %>%
ggplot(aes(x=factor(salary), y = equity)) +
geom_boxplot()
hitter_value_graph
#########################
##### PITCHERS HERE #####
#########################
pitchers2019 <- read_csv("./old_draft_analysis/pitchers.csv") %>%
mutate(WHIP = (H+BB)/IP) %>%
select(Name, IP, W, SV, SO, ERA, WHIP)
replacement_pitchers <- readxl::read_xlsx("./replacement/replacement_pitchers.xlsx",
sheet="replacement") %>%
select(-IP) %>%
mutate(Position = "P") %>%
rename_at(vars(-Position), function(x) paste0(x, "_repl"))
#merge in 2019 results for each pick, merge in replacment levels.
pitcher_results <- left_join(draft, pitchers2019, by =c("player" ="Name")) %>%
left_join(replacement_pitchers, by = c("position" = "Position")) %>%
filter(player %in% pitchers2019$Name) %>%
mutate(
mrg_era = ERA - ERA_repl,
mrg_whip = WHIP - WHIP_repl,
mrg_k = SO - K_repl,
mrg_w = W - W_repl,
mrg_sv = SV - SV_repl,
marginal_points = mrg_era * coefs$estimate[2]*(IP/1464) +
mrg_whip * coefs$estimate[10]*(IP/1464) +
mrg_k * coefs$estimate[4] +
mrg_w * coefs$estimate[9] +
mrg_sv * coefs$estimate[8],
dollar_value = marginal_points*4680/1700 + 3,
equity = dollar_value - salary
)
pitcher_value_targets <- pitcher_results %>%
filter(!kept) %>%
group_by(salary) %>%
summarise(mean_equity = mean(equity, na.rm = TRUE),
equity_sd = sd(equity,  na.rm = TRUE))
pitcher_value_graph <- pitcher_results %>%
filter(!kept) %>%
ggplot(aes(x=factor(salary), y = equity)) +
geom_boxplot()
pitcher_value_graph
scatterplot_hit <- ggplot(hitter_results, aes(x=salary,y=equity)) +
geom_point() +
geom_smooth()
scatterplot_hit
scatterplot_pitch <- ggplot(pitcher_results, aes(x=salary,y=equity)) +
geom_point() +
geom_smooth()
scatterplot_pitch
scatterplot_hit
install.packages("ggrepel")
library(tidyverse)
#Load parameters file
source("parameters.R")
#load in coefficients file
if (!file.exists("coefs.rda")) {
source("historyanalysis.R")
}
#load hitter and pitcher projections
if (!file.exists("projections.rda")) {
source("calculatevalue.R")
} else{
load("projections.rda")
}
#Build league
source("leaguesetup.R")
#merge in projections
source("mergeinprojections.R")
#run draft
source("draftpicks.R")
#run draft
source("draftpicks.R")
library(tidyverse)
#Load parameters file
source("parameters.R")
#load in coefficients file
if (!file.exists("coefs.rda")) {
source("historyanalysis.R")
}
#load hitter and pitcher projections
if (!file.exists("projections.rda")) {
source("calculatevalue.R")
} else{
load("projections.rda")
}
#Build league
source("leaguesetup.R")
#run draft
source("draftpicks.R")
library(tidyverse)
#Load parameters file
source("parameters.R")
#load in coefficients file
if (!file.exists("coefs.rda")) {
source("historyanalysis.R")
}
#load hitter and pitcher projections
if (!file.exists("projections.rda")) {
source("calculatevalue.R")
} else{
load("projections.rda")
}
#Build league
source("leaguesetup.R")
#run draft
source("draftpicks.R")
#merge in projections
source("mergeinprojections.R")
library(tidyverse)
#Load parameters file
source("parameters.R")
#load in coefficients file
if (!file.exists("coefs.rda")) {
source("historyanalysis.R")
}
#load hitter and pitcher projections
if (!file.exists("projections.rda")) {
source("calculatevalue.R")
} else{
load("projections.rda")
}
#Build league
source("leaguesetup.R")
#run draft
source("draftpicks.R")
batter_positions <- c("C1","C2","1B","2B","SS","3B","CI","MI","OF1","OF2","OF3","OF4","OF5","OF6","DH")
pitcher_positions <- c("P1","P2","P3","P4","P5","P6","P7","P8","P9","P10")
#read in replacement level hitters
replacement_hitters <- readxl::read_xlsx("./replacement/replacement_hitters.xlsx") %>%
rename(R = Runs)
replacement_hitters$Position <- c("C",
"1B",
"2B",
"SS",
"3B",
"MI",
"CI",
"OF",
"DH"
)
replacement_hitters$AB <- c(400)
#isolate repeated positions
replacement_catcher <- filter(replacement_hitters, Position == "C")
replacement_of <- filter(replacement_hitters, Position == "OF")
merge_repeats <- function(position, times_appears) {
for (i in seq(1,times_appears)) {
data_to_merge <- get(position)
pos_number <- data_to_merge %>% pull(Position) %>% paste0(i)
data_to_merge <- mutate(data_to_merge, Position = pos_number)
replacement_hitters <<- rbind(replacement_hitters, data_to_merge)
}
}
merge_repeats("replacement_of", 6)
merge_repeats("replacement_catcher",2)
#read in replacement level pitchers
replacement_pitcher <- readxl::read_xlsx("./replacement/replacement_pitchers.xlsx",
sheet="replacement")
#####################################################################
#############MERGE IN PROJECTIONS FOR EACH PLAYER AND TEAM###########
#####################################################################
#create function to grab replacement level hitter stat based on position
get_replacement_hitter <- function(position, stat) {
quo_stat <- enquo(stat)
replacement <- filter(replacement_hitters, Position == position) %>%
select(!!quo_stat)
pull(replacement, !!quo_stat)
}
#create function to grab replacement level pitcher stat based on position
get_replacement_pitcher <- function(stat) {
quo_stat <- enquo(stat)
replacement <- replacement_pitcher %>%
select(!!quo_stat)
pull(replacement, !!quo_stat)
}
for (team in teams) {
temp <- get(team)
#separate hitters and pitchers
hitters <- filter(temp, roster_spot %in% batter_positions)
pitchers <- filter(temp, roster_spot %in% pitcher_positions)
#merge in projections
hitters <- left_join(hitters, hitter_projections, by = "Name")
pitchers <- left_join(pitchers, pitcher_projections, by = "Name")
open_hitters <- hitters %>% filter(Name == "") %>%
pull(roster_spot)
hitters <- hitters %>%
mutate(R = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, R),
R),
HR = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, HR),
HR),
RBI = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, RBI),
RBI),
SB = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, SB),
SB),
AVG = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, AVG),
AVG),
AB = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, AB),
AB))
pitchers <- pitchers %>%
mutate(ERA = ifelse(Name=="", get_replacement_pitcher(ERA), ERA),
WHIP = ifelse(Name=="", get_replacement_pitcher(WHIP), WHIP),
SV = ifelse(Name=="", get_replacement_pitcher(SV), SV),
W = ifelse(Name=="", get_replacement_pitcher(W), W),
K = ifelse(Name=="", get_replacement_pitcher(K), K),
IP = ifelse(Name=="", get_replacement_pitcher(IP), IP))
#merge hitters and pitchers
temp <- bind_rows(hitters, pitchers) %>%
map_at(c("R", "RBI", "HR", "SB", "K", "SV", "W", "IP"), round, 1) %>%
map_at(c("ERA", "WHIP"), round, 2) %>%
map_at(c("AVG"), round, 3) %>%
tbl_df()
assign(team, temp)
remove(hitters, pitchers, temp, undrafted.pitchers, undrafted.hitters)
}
team
temp
temp <- get(team)
temp
#separate hitters and pitchers
hitters <- filter(temp, roster_spot %in% batter_positions)
pitchers <- filter(temp, roster_spot %in% pitcher_positions)
hitters
#merge in projections
hitters <- left_join(hitters, hitter_projections, by = "Name")
pitchers <- left_join(pitchers, pitcher_projections, by = "Name")
hitters
open_hitters <- hitters %>% filter(Name == "") %>%
pull(roster_spot)
hitters <- hitters %>%
mutate(R = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, R),
R),
HR = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, HR),
HR),
RBI = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, RBI),
RBI),
SB = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, SB),
SB),
AVG = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, AVG),
AVG),
AB = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, AB),
AB))
hitters <- hitters %>%
mutate(R = ifelse(roster_spot %in% open_hitters,
get_replacement_hitter(roster_spot, R),
R))
roster_spot
open_hitters
